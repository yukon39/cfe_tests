// BSLLS:MissingVariablesDescription-off

#Использовать v8runner
#Использовать gitrunner
#Использовать "..\..\core"

#Область ОписаниеПеременных

Перем КаталогИсходников;
Перем НомерСборки;
Перем ИмяПроекта;
Перем СтрокаСоединения;
Перем ВерсияПлатформы;

#КонецОбласти

#Область КомандаПриложения

Процедура ОписаниеКоманды(Команда) Экспорт
	
	Команда.Опция("build-number", "", "Номер сборки")
	.ТСтрока()
	.ВОкружении("BUILD_NUMBER");

	Команда.Опция("project-name", "", "Имя проекта")
	.ТСтрока()
	.ВОкружении("BUILD_NUMBER");
	
	Команда.Опция("src", "", "Каталог исходников")
	.ТСтрока();
	
	ПараметрыПроекта.ДобавитьОпцииСоединенияИБ(Команда);
	
КонецПроцедуры

Процедура ВыполнитьКоманду(Команда) Экспорт
	
	КаталогИсходников = Команда.ЗначениеОпции("src");
	НомерСборки = Команда.ЗначениеОпции("build-number");
	ИмяПроекта = Команда.ЗначениеОпции("project-name");
	КаталогДвоичныхДанных = Команда.ЗначениеОпции("out");
	СтрокаСоединения = Команда.ЗначениеОпции("ibconnection");
	ВерсияПлатформы = Команда.ЗначениеОпции("v8version");
	
	Сообщить("Сборка конфигурации");
	
	ВерсияПроекта = ВерсияПроекта();
	КаталогДвоичныхДанных = ПараметрыПроекта.КаталогДвоичныхДанных();
	Шаблон = ОбъединитьПути(КаталогДвоичныхДанных, "%1_%2.cf");
	ИмяФайлаПроекта = СтрШаблон(Шаблон, ИмяПроекта, ВерсияПроекта);
	
	СобратьПроект(ИмяФайлаПроекта);
	
	ОтменитьИзмененияФайлаКонфигурации();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВерсияПроекта()
	
	ВерсияКонфигурации = ВерсияКонфигурации();
	
	Если ПустаяСтрока(НомерСборки) Тогда
		
		ПолнаяВерсия = ВерсияКонфигурации;
		
	Иначе
		
		ПолнаяВерсия = ВерсияСоСборкой(ВерсияКонфигурации, НомерСборки);
		ЗаписатьВерсиюПроекта(ПолнаяВерсия);
		
	КонецЕсли;
	
	Возврат ПолнаяВерсия;
	
КонецФункции

Функция ВерсияКонфигурации()
	
	ИмяФайлаКонфигурации = ИмяФайлаКонфигурации();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаКонфигурации, КодировкаТекста.UTF8);
	СтрокаXML = ТекстовыйДокумент.ПолучитьТекст();
	
	РегулярноеВыражение = Новый РегулярноеВыражение("<Version>(\d+.\d+.\d+.\d+)<\/Version>");
	Совпадения = РегулярноеВыражение.НайтиСовпадения(СтрокаXML);
	
	Если Совпадения.Количество() = 0 Тогда
		Возврат "0.0.0.0";
	Иначе
		Возврат Совпадения[0].Группы[1].Значение;
	КонецЕсли;
	
КонецФункции

Функция ИмяФайлаКонфигурации()
	Возврат ОбъединитьПути(КаталогИсходников, "Configuration.xml");
КонецФункции

Функция ВерсияСоСборкой(ТекущийНомерВерсии, ТекущийНомерСборки)
	
	ШаблонПодстановки = СтрШаблон("$1.%1", ТекущийНомерСборки);
	РегулярноеВыражение = Новый РегулярноеВыражение("(\d+.\d+.\d+).(\d+)");
	Возврат РегулярноеВыражение.Заменить(ТекущийНомерВерсии, ШаблонПодстановки);
	
КонецФункции

Процедура ЗаписатьВерсиюПроекта(ВерсияПроекта)
	
	ИмяФайлаКонфигурации = ИмяФайлаКонфигурации();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаКонфигурации, КодировкаТекста.UTF8);
	СтрокаXML = ТекстовыйДокумент.ПолучитьТекст();
	
	ШаблонПодстановки = СтрШаблон("<Version>%1</Version>", ВерсияПроекта);
	РегулярноеВыражение = Новый РегулярноеВыражение("(<Version>\d+.\d+.\d+.\d+<\/Version>)");
	НоваяСтрокаXML = РегулярноеВыражение.Заменить(СтрокаXML, ШаблонПодстановки);
	ТекстовыйДокумент.УстановитьТекст(НоваяСтрокаXML);
	ТекстовыйДокумент.Записать(ИмяФайлаКонфигурации, КодировкаТекста.UTF8);
	
КонецПроцедуры

Процедура СобратьПроект(ИмяФайлаПроекта)
	
	УправлениеКонфигуратором = Новый УправлениеКонфигуратором();
	УправлениеКонфигуратором.УстановитьКонтекст(СтрокаСоединения, "", "");
	УправлениеКонфигуратором.ИспользоватьВерсиюПлатформы(ВерсияПлатформы);
	УправлениеКонфигуратором.СоздатьФайловуюБазу("D:\GitHub\ftech.io\cfe_tests\.temp\ib");
	УправлениеКонфигуратором.ЗагрузитьКонфигурациюИзФайлов(КаталогИсходников, , , , Истина);
	УправлениеКонфигуратором.ВыгрузитьКонфигурациюВФайл(ИмяФайлаПроекта);
	
КонецПроцедуры

Процедура ОтменитьИзмененияФайлаКонфигурации()

	ИмяФайлаКонфигурации = ИмяФайлаКонфигурации();

	ПараметрыКоманды = Новый Массив;
	ПараметрыКоманды.Добавить("restore");
	ПараметрыКоманды.Добавить(СтрШаблон("""%1""", ИмяФайлаКонфигурации));

	Репозиторий = Новый ГитРепозиторий();
	Репозиторий.УстановитьРабочийКаталог(ТекущийКаталог());
	Репозиторий.ВыполнитьКоманду(ПараметрыКоманды);

КонецПроцедуры

#КонецОбласти
