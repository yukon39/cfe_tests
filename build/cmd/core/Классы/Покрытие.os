// BSLLS:MissingVariablesDescription-off

#Использовать v8find
#Использовать 1commands
#Использовать coveragebsl

#Область ОписанияПеременных

Перем АдресОтладчика;
Перем ПарольОтладчика;
Перем ИмяИнформационнойБазы;
Перем ВерсияПлатформы;

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция УстановитьАдресОтладчика(ПараметрАдресОтладчика) Экспорт

	АдресОтладчика = ПараметрАдресОтладчика;
	Возврат ЭтотОбъект;

КонецФункции

Функция УстановитьИмяИнформационнойБазы(ПараметрИмяИнформационнойБазы) Экспорт
	
	ИмяИнформационнойБазы = ПараметрИмяИнформационнойБазы;
	Возврат ЭтотОбъект;

КонецФункции

Функция УстановитьВерсиюПлатформы(ПараметрВерсияПлатформы) Экспорт
	
	ВерсияПлатформы = ПараметрВерсияПлатформы;
	Возврат ЭтотОбъект;

КонецФункции

Функция ВыполнитьСбор(Действие) Экспорт
	
	Если ЗначениеЗаполнено(АдресОтладчика) Тогда
		ДанныеПокрытия = ПроксиЗапуститьСоСборомПокрытияВнутренний(Действие);
	Иначе
		ДанныеПокрытия = ЗапуститьСборПокрытияСЗапускомСервераОтладки(Действие);
	КонецЕсли;

	Сообщить("Количество модулей в покрытии: " + ДанныеПокрытия.Данные.Количество());
	
	Возврат ДанныеПокрытия;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта() Экспорт

	АдресОтладчика = "";
	ПарольОтладчика = "";
	ИмяИнформационнойБазы = "DefAlias";
	ВерсияПлатформы = "8.3";

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗапуститьСборПокрытияСЗапускомСервераОтладки(Действие)

	СерверОтладки = ЗапуститьСерверОтладки();
	УстановитьПеременнуюСреды("RUNNER_DEBUGGER_URL", АдресОтладчика);

	Попытка
		
		ДанныеПокрытия = ПроксиЗапуститьСоСборомПокрытияВнутренний(Действие);
		ЗавершитьПроцессСервераОтладки(СерверОтладки);
		
	Исключение
		ЗавершитьПроцессСервераОтладки(СерверОтладки);
		ВызватьИсключение;
	КонецПопытки;

	Возврат ДанныеПокрытия;

КонецФункции

Функция ПроксиЗапуститьСоСборомПокрытияВнутренний(Действие)
	
	МенеджерПокрытия = Новый МенеджерПокрытия(АдресОтладчика);
	МенеджерПокрытия.ПроверитьСоединение();
	
	Сессия = МенеджерПокрытия.НоваяСессияПокрытия(ИмяИнформационнойБазы);
	Сессия.Подключить(ПарольОтладчика);
	ИдентификаторСбора = Сессия.НачатьСборПокрытия();
	
	ДополнительныеПараметры = Новый Массив;
	ДополнительныеПараметры.Добавить("/DEBUG -http -attach");
	ДополнительныеПараметры.Добавить(СтрШаблон("/DEBUGGERURL %1", АдресОтладчика));
	
	Действие.Выполнить(СтрСоединить(ДополнительныеПараметры, " "));
	
	ДанныеПокрытия = Сессия.ЗавершитьСборПокрытия();
	Сессия.Отключить();
	
	Возврат ДанныеПокрытия;
	
КонецФункции

Функция ЗапуститьСерверОтладки()
	
	ПутьКDBGS = Платформа1С.ПутьКDBGS(ВерсияПлатформы);
	
	НомерПортаПоУмолчанию = 1550;
	НомерПорта = XMLСтрока(НомерПортаПоУмолчанию + НомерТекущегоИсполнителяCI());
	ТаймаутОжидания = 15;
	
	ИмяФайлаЗапуска = ПолучитьИмяВременногоФайла("txt");
	
	Команда = Новый Команда;
	Команда.УстановитьИсполнениеЧерезКомандыСистемы(Ложь);
	Команда.УстановитьКоманду(ПутьКDBGS);
	Команда.ПерехватыватьПотоки(Ложь);
	Команда.ДобавитьПараметр("--addr=localhost");
	Команда.ДобавитьПараметр(СтрШаблон("--port=%1", НомерПорта));
	Команда.ДобавитьПараметр(СтрШаблон("--notify=""%1""", ИмяФайлаЗапуска));
	
	ПроцессСервераОтладки = Команда.ЗапуститьПроцесс();
	
	Попытка
		ОжидатьПоявленияФайла(ИмяФайлаЗапуска, ТаймаутОжидания);
	Исключение
		
		ЗавершитьПроцессСервераОтладки(ПроцессСервераОтладки, ТаймаутОжидания);
		ВызватьИсключение;
		
	КонецПопытки;
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.Прочитать(ИмяФайлаЗапуска);
	АдресОтладки = СокрЛП(ТекстовыйДокумент.ПолучитьТекст());
	УдалитьФайлы(ИмяФайлаЗапуска);
	
	АдресОтладчика = СтрШаблон("http://%1", АдресОтладки);
	
	Возврат ПроцессСервераОтладки;
	
КонецФункции

Функция НомерТекущегоИсполнителяCI()
	
	НомерИсполнителя = ПолучитьПеременнуюСреды("EXECUTOR_NUMBER");
	ОписаниеТипов = Новый ОписаниеТипов("Число");
	
	Возврат ОписаниеТипов.ПривестиЗначение(НомерИсполнителя);
	
КонецФункции

Процедура ОжидатьПоявленияФайла(ИмяФайла, Таймаут)
	
	Файл = Новый Файл(ИмяФайла);
	Счетчик = 0;
	Пока Счетчик < Таймаут Цикл
		
		Если Файл.Существует() Тогда
			Прервать;
		КонецЕсли;
		
		Приостановить(1000);
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Если Не Файл.Существует() Тогда
		ВызватьИсключение "Файл со строкой отладки не появился";
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершитьПроцессСервераОтладки(ПроцессСервераОтладки, Таймаут = 5)
	
	Если ПроцессСервераОтладки.Завершен Тогда
		Возврат;
	КонецЕсли;
	
	ПроцессСервераОтладки.Завершить();
	
	Завершен = ПроцессСервераОтладки.ОжидатьЗавершения(Таймаут * 1000); // BSLLS:MagicNumber-off
	
	Если Не Завершен Тогда
		ВызватьИсключение "Процесс сервера отладки не завершен";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
