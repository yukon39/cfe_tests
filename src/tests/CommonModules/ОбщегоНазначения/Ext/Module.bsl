#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("Тест_ПроверкаНесуществующейСсылки");
	НаборТестов.Добавить("Тест_ПроверкаСуществующейСсылки");
	
КонецПроцедуры

Процедура Тест_ПроверкаНесуществующейСсылки(Ванесса) Экспорт
	
	// Дано
	Идентификатор = Строка(Новый УникальныйИдентификатор);
	Ссылка = XMLЗначение(Тип("СправочникСсылка.Пользователи"), Идентификатор);
	
	// Когда
	Результат = ОбщегоНазначения.СсылкаСуществует(Ссылка);
	
	// Тогда    	
	Утверждения = Тест_ПомощникТестированияКлиентСервер.Утверждения(Ванесса);
	Утверждения.ПроверитьЛожь(Результат);
	
КонецПроцедуры

Процедура Тест_ПроверкаСуществующейСсылки(Ванесса) Экспорт
	
	// Дано
	Макет = Справочники.Пользователи.ПолучитьМакет("Тест_ПроверкаСуществующейСсылки");
	Тест_ПомощникТестированияКлиентСервер.ЗагрузитьМакет(Ванесса, Макет);
	
	Ссылка = XMLЗначение(Тип("СправочникСсылка.Пользователи"), "dbbf141f-31fd-11ec-83e7-d02788044fe5");
	
	// Когда
	Результат = ОбщегоНазначения.СсылкаСуществует(Ссылка);
	
	// Тогда
	Утверждения = Тест_ПомощникТестированияКлиентСервер.Утверждения(Ванесса);
	Утверждения.ПроверитьИстину(Результат);
	
КонецПроцедуры

#КонецОбласти